<자동 로그인>

1. login.jsp
 - 자동 로그인 체크박스 추가(name은 autoLogin, value는 true)

2. DB에 member테이블에 me_seesion_id(varchar(45)), me_session_limit(datetime)를 추가(이미 추가됨)
2-1. MemberVO에 me_seesion_id, me_session_limit, autoLoing(boolean) 필드 추가

3. Home컨트롤러
 - 메소드 수정
   - value : /login
   - method : post
   - 로그인한 회원 정보가 있으면 회원 정보에 화면에서 보내준 autoLogin으로 수정

4. 로그인인터셉터
 - 메소드 수정
   - 회원 정보가 있으면 세션에 회원 정보를 저장한 후(이미 작성된 코드) 자동로그인을 체크했으면 클라이언트에 쿠키를 생성해서 전송
     - 자동 로그인을 체크했으면
       - 쿠키를 생성
          - 이름 : testCookie
          - 값 : 세션 아이디(중복이 안되기 때문)
       - 쿠키 만료 시간을 초단위로 계산해서 정수로 저장(예 : 1주일)
       - 쿠키의 path설정 : /
       - HttpServletResponse에 생성한 쿠키를 추가하여 전송
       - 회원 정보에 세션 정보를 추가 
         - 세션 아이디를 추가 
         - 만료시간을 추가
           - 일주일 뒤의 시간을 밀리초로 계산한후 이 정수를 이용하여 날짜 객체를 생성하여 추가
       - 멤버서비스에게 회원 정보를 주면서 세션 정보를 업데이트 하라고 요청

5. 멤버서비스/임플
  - 회원 null체크
  - 다오에게 회원 정보를 주면서 세션 정보를 업데이트 하라고 요청

6. 멤버다오/매퍼
  - update 쿼리를 이용하여 세션 정보를 수정

1~6이 자동 로그인을 위한 준비 단계

7. 자동로그인 인터셉터 추가
  - preHandle 메소드 오버라이딩 
    - 회원 정보를 가져옴
    - 회원 정보가 없으면 
      - testCookie정보를 가져옴
      - testCookie가 있으면
        - testCookie의 값을 가져옴(세션아이디)
        - 멤버서비스에게 세션아이디를 주면서 회원 정보를 가져오라고 요청
        - 회원 정보가 잇으면 세션에 회원 정보를 저장

8. 멤버서비스/임플
  - 메소드 추가
    - 다오에게 세션아이디를 주면서 회원 정보를 가져오라고 요청

9. 다오/매퍼
  - 메소드 추가 및 쿼리 구현
    - select 쿼리를 이용
    - 만료시간이 안지난 회원 정보만 가져옴
    - resultType 지정

10. servlet-context.xml
  - 자동로그인 인터셉터 등록
  - 자동로그인 인터셉터가 동작하는 url 설정

11. 홈컨트롤러
  - 메소드 수정
    - value : /logout
    - 세션에서 회원 정보를 제거하기전, 회원정보를 가져옴
    - 가져온 회원정보에 세션만료시간을 null로 설정
    - 멤버서비스에게 회원 정보를 주면서 세션정보를 수정하라고 요청











