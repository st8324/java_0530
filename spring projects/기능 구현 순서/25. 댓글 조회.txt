<댓글 조회 + 페이지네이션>

1. URL 선정 : /comment/list/게시글번호

2. detail.jsp
 - ajax를 이용하여 댓글을 조회하는 코드를 작성
   - 객체 :  현재페이지 정보를 나타내는 Criteria - 현재페이지, 한페이지당 컨텐츠 수
   - URL :  /comment/list/게시글번호
   - 성공후 실행할 메소드 : listSuccess - console.log(data)

3. 컨트롤러
 - 메소드 추가(ajax)
   - 화면에서 보내준 현재페이지정보 확인
   - 게시글 번호 확인

4. 테스트
 - 브라우저 콘솔차에 {}가 출력되면 성공

5. 컨트롤러
 - 댓글 리스트를 조회
   - 서비스에게 현재 페이지 정보와 게시글 번호를 주면서 댓글 리스트를 가져오라고 요청
   - 가져온 댓글 리스트를 map에 추가
 - 페이지네이션을 생성
   - A. 한페이지네이션당 최대 페이지수 : 임의로 설정 - 5
   - B. 서비스에게 게시글 번호를 주면서 총 댓글수를 가져오라고 요청
   - C. 현재 페이지 정보 - 이미 알고 있음
   - A,B,C를 이용하여 페이지메이커 객체를 생성한 후, map에 추가

6. 서비스/임플
 - 댓글 리스트 조회 메소드 추가
   - 현재 페이지 정보가 null이면 기본 생성자를 이용하여 객체 생성
   - 다오에게 게시글 번호, 현재페이지 정보를 주면서 댓글 리스트를 달라고 요청후 리턴
 - 총 댓글 수를 조회 메소드 추가
   - 다오에게 게시글 번호를 주면서 총 댓글 수를 알려달라고 요청 후 리턴

7. 다오/매퍼
 - 댓글 리스트 조회 메소드 추가 및 쿼리구현
  - select문을 이용, resultType이 CommentVO
 - 총 댓글수를 조회 메소드 추가 및 쿼리 구현
  - select문을 이용, resultType이 int

8. detail.jsp
 - listSuccess 함수
  - 서버에서 보낸 정보를 이용하여 댓글 화면과 페이지네이션을 구성
  - 페이지네이션에서 숫자를 클릭하면 해당 페이지 댓글이 보이도록 이벤트 등록 및 구현

9. detail.jsp
 - insertSuccess 함수
  - 댓글 추가에 성공하면 댓글을 다시 조회하도록 작업
















